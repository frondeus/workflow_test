name: E2E Tests
on:
  workflow_run:
    workflows: ["Artifact"]
    types:
      - completed
jobs:
  build:
    name: Run tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get App token
        id: app_token
        uses: machine-learning-apps/actions-app-token@master
        with:
          APP_PEM: ${{ secrets.FRONDEUS_GH_PEM }}
          APP_ID: ${{ secrets.FRONDEUS_GH_ID }}

      - uses: actions/github-script@v5
        id: prs
        with:
          github-token: ${{ steps.app_token.outputs.app_token }}
          script: |
            const script = require('./.github/scripts/get-prs.js');
            return await script({ github, context });

      - run: echo IS_E2E="${{ contains(fromJSON(steps.prs.outputs.result).labels, 'e2e') }}" >> $GITHUB_ENV
      - run: echo GITHUB_BRANCH="${{ fromJSON(steps.prs.outputs.result).branch }}" >> $GITHUB_ENV
      - run: echo GITHUB_SHA="${{ fromJSON(steps.prs.outputs.result).sha }}" >> $GITHUB_ENV

      - name: Checkout the right branch
        run: |
          git fetch --no-tags --depth=1 origin "${{ env.GITHUB_SHA }}"
          git checkout "${{ env.GITHUB_SHA }}"
          git status

      - run: echo "${GITHUB_BRANCH}"

      - name: Download artifact
        if: ${{ env.IS_E2E == 'true' }}
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: artifact.yml
          workflow_conclusion: success
          branch: "${{ env.GITHUB_BRANCH }}"
          commit: "${{ env.GITHUB_SHA }}"
          name: foo

      - name: Run tests
        if: ${{ env.IS_E2E == 'true' }}
        run: |
          echo "Running tests ${{ env.GITHUB_REF }}"
          sleep 6
          cat my_artifact.txt
          exit 1

      - name: Complete check
        if: ${{ env.IS_E2E == 'true' && always() }}
        uses: actions/github-script@v5
        with:
          github-token: ${{ steps.app_token.outputs.app_token }}
          script: |
            const script = require('./.github/scripts/complete-check.js');
            const check_ids = ${{ steps.prs.outputs.result }}.check_ids;
            script({ github, context, check_ids, status: "${{ job.status }}" });
